# -*- coding: utf-8 -*-
"""CitizenAI_Generative_Health_Assistant.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-z2H08CmeMwHqMJD6NIH0TjBuFfJQOzn
"""

!pip install transformers accelerate gradio

from transformers import AutoTokenizer, AutoModelForCausalLM
import torch

# Load IBM Granite 3.3B Instruct model
model_name = "ibm-granite/granite-3.3-2b-instruct"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name, torch_dtype=torch.float16, device_map="auto")

def identify_disease(symptoms):
    prompt = f"User has the following symptoms: {symptoms}. What could be the possible disease?"
    inputs = tokenizer(prompt, return_tensors="pt").to(model.device)
    outputs = model.generate(**inputs, max_new_tokens=100)
    response = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return response.replace(prompt, "").strip()

def suggest_home_remedy(disease):
    prompt = f"What are some natural home remedies for {disease}?"
    inputs = tokenizer(prompt, return_tensors="pt").to(model.device)
    outputs = model.generate(**inputs, max_new_tokens=100)
    response = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return response.replace(prompt, "").strip()

import gradio as gr

with gr.Blocks() as demo:
    gr.Markdown("# ðŸ¤– Citizen AI â€“ Intelligent Health Assistant")

    with gr.Tab("ðŸ”Ž Symptoms Identifier"):
        symptoms_input = gr.Textbox(label="Enter your symptoms")
        symptoms_output = gr.Textbox(label="Predicted Disease")
        symptoms_button = gr.Button("Predict")
        symptoms_button.click(fn=identify_disease, inputs=symptoms_input, outputs=symptoms_output)

    with gr.Tab("ðŸŒ¿ Home Remedies"):
        disease_input = gr.Textbox(label="Enter the disease name")
        remedy_output = gr.Textbox(label="Home Remedy")
        remedy_button = gr.Button("Suggest")
        remedy_button.click(fn=suggest_home_remedy, inputs=disease_input, outputs=remedy_output)

demo.launch()